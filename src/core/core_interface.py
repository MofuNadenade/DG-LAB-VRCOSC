from typing import Protocol

from PySide6.QtGui import QPixmap

from core.registries import Registries
from models import ConnectionState, StrengthData, Channel, UIFeature


class CoreInterface(Protocol):
    """统一的核心操作接口协议"""
    # 数据访问属性
    registries: Registries

    # 连接状态管理
    def set_connection_state(self, state: ConnectionState, message: str = "") -> None: ...

    def get_connection_state(self) -> ConnectionState: ...

    # 当前波形管理
    def set_current_pulse(self, channel: Channel, mode_name: str) -> None: ...

    def get_current_pulse(self, channel: Channel) -> str: ...

    # 功能开关管理
    def set_feature_state(self, feature: UIFeature, enabled: bool, silent: bool = False) -> None: ...

    def get_feature_state(self, feature: UIFeature) -> bool: ...

    # 数值控制管理
    def set_strength_step(self, value: int, silent: bool = False) -> None: ...

    def get_strength_step(self) -> int: ...

    # 状态更新管理
    def update_current_channel(self, channel: Channel) -> None: ...

    def update_status(self, strength_data: StrengthData) -> None: ...

    # WebSocket连接管理
    def update_qrcode(self, qrcode_pixmap: QPixmap) -> None: ...

    # 配置文件管理
    def save_settings(self) -> None: ...

    # 日志管理
    def log_info(self, message: str) -> None: ...

    def log_warning(self, message: str) -> None: ...

    def log_error(self, message: str) -> None: ...

    def clear_logs(self) -> None: ...

    # 控制器管理
    def set_controller_available(self, available: bool) -> None: ...

    # 连接状态通知回调
    def on_client_connected(self) -> None: ...

    def on_client_disconnected(self) -> None: ...

    def on_client_reconnected(self) -> None: ...
