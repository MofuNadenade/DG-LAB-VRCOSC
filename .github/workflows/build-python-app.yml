# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches:
      - "master"
      - "action-test"
      - "feature/*"
      - "feat-*"
  pull_request:
    branches:
      - "master"
      - "action-test"
      - "feature/*"

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for version generation

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if (Test-Path requirements.txt) {
          pip install -r requirements.txt
        }
      shell: pwsh

    - name: Generate version file
      run: |
        python scripts/generate_version.py
        Write-Host "Generated version file:"
        Get-Content src/version.py
      shell: pwsh

    - name: Type check with pyright
      run: |
        python -m pyright src/
      shell: pwsh
      continue-on-error: true

    - name: Build with build script
      run: |
        # 调用构建脚本进行构建
        python scripts/build.py --clean
        Write-Host "Build completed using build script"
      shell: pwsh

    - name: Verify build artifacts
      run: |
        # 验证构建产物
        if (Test-Path dist/DG-LAB-VRCOSC.exe) {
          Write-Host "Build artifact found: dist/DG-LAB-VRCOSC.exe"
          Get-ChildItem dist/ | ForEach-Object { Write-Host "  - $($_.Name)" }
        } else {
          Write-Error "Build artifact not found"
          exit 1
        }
      shell: pwsh

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: DG-LAB-VRCOSC
        path: dist/